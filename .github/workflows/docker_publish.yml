name: Build & Publish docker image for TRICYS

permissions:
  contents: read      
  packages: write 

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    paths:
      - 'docker/*'
      - '.github/workflows/docker_publish.yml'
  push:
    paths:
      - 'docker/*'
      - '.github/workflows/docker_publish.yml'

env:
  DOCKER_IMAGE_BASENAME: ghcr.io/${{ github.repository_owner }}/tricys_om
  USE_LATEST_TAG: true

jobs:
  # builds and pushes docker images of various stages to ghcr.
  # These docker images are also stored in ghcr and can be pulled
  # to be built upon by the subsequent stage.
  BaseBuild:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['gui', 'ompython']
      fail-fast: false   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.repository_owner == 'asipp-neutronics' && secrets.GITHUB_TOKEN || secrets.MY_TOKEN }}
      
      - name: Tag images with latest if on the main repo's develop branch
        if: github.repository_owner == 'asipp-neutronics' && github.ref_name == 'main'
        run: echo "USE_LATEST_TAG=true" >> $GITHUB_ENV

      # build base python using multistage docker build action
      - uses: firehed/multistage-docker-build-action@v1
        id: build_all_stages
        with:
          repository: ${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}
          stages: base_om
          server-stage: base_om
          quiet: false
          parallel: true
          tag-latest-on-default: ${{ env.USE_LATEST_TAG }}
          dockerfile: docker/tricys_om_${{matrix.version}}.dockerfile
          build-args: tricys_test_base=base_om
      # This step runs only if a previous step has failed
      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3

  # Downloads the images uploaded to ghcr in previous stages and runs tricys
  # tests to check that they work.
  BuildTest:
    needs: [BaseBuild]
    runs-on: ubuntu-latest
    
    strategy:
      matrix: 
        tricys_test_base: [tricys]
        version: ['gui', 'ompython']
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.repository_owner == 'asipp-neutronics' && secrets.GITHUB_TOKEN || secrets.MY_TOKEN }}
      
      - name: Tag images with latest if on the main repo's develop branch
        if: github.repository_owner == 'asipp-neutronics' && github.ref_name == 'main'
        run: echo "USE_LATEST_TAG=true" >> $GITHUB_ENV

      # build test stage and tricys-dev stage using multistage docker build action
      - uses: firehed/multistage-docker-build-action@v1
        id: multistage_build_and_test
        with:
          repository: ${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}
          stages: ${{ matrix.tricys_test_base }}
          server-stage: tricys
          quiet: false
          parallel: true
          tag-latest-on-default: ${{ env.USE_LATEST_TAG }}
          dockerfile: docker/tricys_om_${{matrix.version}}.dockerfile
          build-args: tricys_test_base=${{ matrix.tricys_test_base }}

      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3

  # if the previous step that tests the docker images passes then the images
  # can be copied from the ghcr where they are saved using :ci_testing tags to
  # :latest and :stable tags.
  pushing_test_stable_img:
    if: github.repository_owner == 'asipp-neutronics' && github.ref_name == 'main'
    needs: [BuildTest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: [base_om,tricys]
        version: ['gui', 'ompython']

    name: "ghcr.io/${{ github.repository_owner }}/tricys_om_${{ matrix.version }}/${{ matrix.stage }}: latest -> stable"

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.repository_owner == 'asipp-neutronics' && secrets.GITHUB_TOKEN || secrets.MY_TOKEN }}

      - name: Push Image to stable img
        uses: akhilerm/tag-push-action@v2.2.0
        with:
          src: ${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}/${{ matrix.stage }}:latest
          dst: ${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}/${{ matrix.stage }}:stable
      
      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3