name: Build & Publish docker image for TRICYS

on:
  workflow_dispatch:
  push:
    paths:
      - 'docker/*'
      - '.github/workflows/docker_publish.yml'

env:
  DOCKER_IMAGE_BASENAME: ghcr.io/${{ github.repository_owner }}/tricys_om

jobs:
  BaseBuild:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: ['ompython', 'gui']
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.repository_owner == 'asipp-neutronics' && secrets.GITHUB_TOKEN || secrets.MY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # === 修正笔误 ===
          images: ${{ env.DOCKER_IMAGE_BASENAME }}_${{ matrix.version }}/base_om
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable=${{ github.repository_owner == 'asipp-neutronics' }}

      - name: Build and push base_om stage
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/tricys_om_${{ matrix.version }}.dockerfile
          target: base_om
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: tricys_test_base=base_om
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3

  BuildTest:
    needs: [BaseBuild]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: ['ompython', 'gui']
        stage: [tricys]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.repository_owner == 'asipp-neutronics' && secrets.GITHUB_TOKEN || secrets.MY_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # === 修正笔误 ===
          images: ${{ env.DOCKER_IMAGE_BASENAME }}_${{ matrix.version }}/${{ matrix.stage }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable=${{ github.repository_owner == 'asipp-neutronics' }}

      - name: Build and push test stage
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/tricys_om_${{ matrix.version }}.dockerfile
          target: ${{ matrix.stage }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: tricys_test_base=${{ matrix.stage }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3

  pushing_test_stable_img:
    if: github.repository_owner == 'asipp-neutronics'
    needs: [BuildTest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage: [base_om, tricys]
        version: ['ompython']
  
    name: "Tag ${{ matrix.stage }} as stable"
  
    permissions:
      contents: read
      packages: write
  
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest image, re-tag as stable, and push
        run: |
          SRC_IMAGE="${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}/${{ matrix.stage }}:latest"
          DST_IMAGE="${{ env.DOCKER_IMAGE_BASENAME }}_${{matrix.version}}/${{ matrix.stage }}:stable"
          
          echo "Pulling ${SRC_IMAGE}"
          docker pull ${SRC_IMAGE}
          
          echo "Tagging ${SRC_IMAGE} as ${DST_IMAGE}"
          docker tag ${SRC_IMAGE} ${DST_IMAGE}
          
          echo "Pushing ${DST_IMAGE}"
          docker push ${DST_IMAGE}
      
      - name: Debug with tmate on failure
        if: failure()
        uses: mxschmitt/action-tmate@v3